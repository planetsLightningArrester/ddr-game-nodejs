let commandMain, commandStroke1, commandStroke2;
let childsIDs = [0];
let burstInterval;

let outterBurstProp = {
    radius: {
        10: 500
    },
    count: 50,

    duration: 1000,
    children: {
        shape: 'circle',
        stroke: randomColor(),
        fill: randomColor(),
        strokeWidth: 3,
        radius: {
            10: 50
        },
        angle: 90,
        duration: 800
    }
}
let innerBurstProp = {
    shape: 'circle',
    radius: {
        10: 600
    },
    count: 20,
    stroke: randomColor(),
    fill: randomColor(),

    duration: 1000,
    children: {
        shape: 'polygon',
        stroke: randomColor(),
        fill: randomColor(),
        strokeWidth: 3,
        radius: {
            10: 50
        },
        points: randomInt(3, 6),
        angle: {
            0: 180
        },
        duration: 800
    }
}

let outterBurst = [0, 0, 0];
let innerBurst = [0, 0, 0];

outterBurst[0] = new mojs.Burst({
    ...outterBurstProp
});

innerBurst[0] = new mojs.Burst({
    ...innerBurstProp

});

outterBurst[1] = new mojs.Burst({
    ...outterBurstProp
});

innerBurst[1] = new mojs.Burst({
    ...innerBurstProp
});

outterBurst[2] = new mojs.Burst({
    ...outterBurstProp
});

innerBurst[2] = new mojs.Burst({
    ...innerBurstProp

});


let animation = {
    heart: {
        main: 0,
        childs: [0, 0]
    },
    sun: {
        main: 0,
        childs: [0, 0]
    },
    x: {
        main: 0,
        childs: [0, 0]
    },
    flower: {
        main: 0,
        childs: [0, 0]
    },
    bear: {
        main: 0,
        childs: [0, 0]
    },
    square: {
        main: 0,
        childs: [0, 0],
        stroke1: 0,
        stroke2: 0
    },
    triangle: {
        main: 0,
        childs: [0, 0],
        stroke1: 0,
        stroke2: 0
    },
    circle: {
        main: 0,
        childs: [0, 0],
        stroke1: 0,
        stroke2: 0
    },
}

let commandsProperties = {
    square: {
        shape: 'polygon',
        fill: '#f23e59',
        stroke: '#f45f75',
        angle: 45,
        points: 4,
        strokeWidth: 5,
        scale: 7,
        opacity: 0
    },
    squareStrokes: {
        stroke1: {
            shape: 'polygon',
            fill: 'transparent',
            stroke: '#f45f75',
            angle: 45,
            points: 4,
            strokeWidth: {
                2: 3
            },
            duration: 1000,
            scale: {
                7.9: 8.2
            },
            isYoyo: true,
            repeat: 9999,
            opacity: 0
        },
        stroke2: {
            shape: 'polygon',
            fill: 'transparent',
            stroke: '#f45f75',
            angle: 45,
            points: 4,
            strokeWidth: {
                1: 2
            },
            delay: 100,
            duration: 900,
            scale: {
                8: 9
            },
            isYoyo: true,
            repeat: 9999,
            opacity: 0
        },
    },
    triangle: {
        shape: 'polygon',
        fill: '#f23e59',
        stroke: '#f45f75',
        angle: 0,
        points: 3,
        strokeWidth: 5,
        scale: 7,
        opacity: 0
    },
    triangleStrokes: {
        stroke1: {
            shape: 'polygon',
            fill: 'transparent',
            angle: 0,
            points: 3,
            strokeWidth: {
                2: 3
            },
            duration: 1000,
            scale: {
                7.9: 8.2
            },
            isYoyo: true,
            repeat: 9999,
            opacity: 0
        },
        stroke2: {
            shape: 'polygon',
            fill: 'transparent',
            stroke: '#f45f75',
            angle: 0,
            points: 3,
            strokeWidth: {
                1: 2
            },
            delay: 100,
            duration: 900,
            scale: {
                8: 9
            },
            isYoyo: true,
            repeat: 9999,
            opacity: 0
        },
    },
    circle: {
        shape: 'circle',
        fill: '#f23e59',
        stroke: '#f45f75',
        strokeWidth: 10,
        scale: 7,
        opacity: 0
    },
    circleStrokes: {
        stroke1: {
            shape: 'circle',
            fill: 'transparent',
            strokeWidth: {
                2: 3
            },
            duration: 1000,
            scale: {
                7.9: 8.2
            },
            isYoyo: true,
            repeat: 9999,
            opacity: 0
        },
        stroke2: {
            shape: 'circle',
            fill: 'transparent',
            stroke: '#f45f75',
            strokeWidth: {
                1: 2
            },
            delay: 100,
            duration: 900,
            scale: {
                8: 9
            },
            isYoyo: true,
            repeat: 9999,
            opacity: 0
        },
    }
};

let svgProperties = {
    fill: 'black',
    scale: {
        7: 8
    },
    duration: 2000,
    easing: 'ease.inout',
    opacity: 0
};

let svgPropertiesMini = {
    scale: 'rand(50,150)',
    x: {
        'rand(-200,1100)': 'rand(-200,1100)'
    },
    y: {
        'rand(0,700)': 'rand(0,700)'
    },
    duration: 'rand(10000,100000)',
    delay: 'rand(0,10000)',
    repeat: 999
}

let childsMoProperties = {
    strokeWidth: 2,
    opacity: 0,
    fill: 'transparent',
    scale: 'rand(4,6)',
    x: {
        'rand(-900,900)': 'rand(-900,900)'
    },
    y: {
        'rand(0,600)': -600
    },
    duration: 'rand(10000,100000)',
    delay: 'rand(0,10000)',
    repeat: 999
}

function randomColor() {
    var letters = '0123456789ABCDEF';
    var color = '#';
    for (var i = 0; i < 6; i++) {
        color += letters[Math.floor(Math.random() * 16)];
    }
    return color;
}

function randomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

function createAnimatedObjects() {

    $("<a class = 'texto' id = 'text' style = 'color: white'></a>").appendTo("#textDiv");

    /*Heart */
    class Heart extends mojs.CustomShape {
        getShape() {
            return '<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 490 490" style=enable-background:new 0 0 512 512;" xml:space="preserve">><path d="m416 88c-40 0-51.945312 28.566406-64 40-12.054688-11.433594-24-40-64-40-37.128906 0-56 42.871094-56 80 0 64 120 136 120 136s120-72 120-136c0-37.128906-18.871094-80-56-80zm0 0" fill="#dd3e46"/><path d="m192 8c-40 0-51.945312 28.566406-64 40-12.054688-11.433594-24-40-64-40-37.128906 0-56 42.871094-56 80 0 64 120 136 120 136s120-72 120-136c0-37.128906-18.871094-80-56-80zm0 0" fill="#f98c96"/><path d="m304 256c-40 0-51.945312 28.566406-64 40-12.054688-11.433594-24-40-64-40-37.128906 0-56 42.871094-56 80 0 64 120 136 120 136s120-72 120-136c0-37.128906-18.871094-80-56-80zm0 0" fill="#f98c96"/><g fill="#fff"><path d="m140.441406 182.65625-8.882812-13.3125c.679687-.457031 68.441406-46.207031 68.441406-89.34375h16c0 51.6875-72.480469 100.601562-75.558594 102.65625zm0 0"/><path d="m216 56h-16c.207031-2.195312-.582031-4.367188-2.152344-5.917969-1.570312-1.550781-3.75-2.316406-5.945312-2.082031l.097656-16c6.421875-.1875 12.636719 2.28125 17.175781 6.824219 4.542969 4.539062 7.011719 10.753906 6.824219 17.175781zm0 0"/><path d="m364.441406 262.65625-8.882812-13.3125c.679687-.457031 68.441406-46.207031 68.441406-89.34375h16c0 51.6875-72.480469 100.601562-75.558594 102.65625zm0 0"/><path d="m440 136h-16c.207031-2.195312-.582031-4.367188-2.152344-5.917969-1.570312-1.550781-3.75-2.316406-5.945312-2.082031l.097656-16c6.421875-.1875 12.636719 2.28125 17.175781 6.824219 4.542969 4.539062 7.011719 10.753906 6.824219 17.175781zm0 0"/><path d="m252.441406 430.65625-8.882812-13.3125c.679687-.457031 68.441406-46.207031 68.441406-89.34375h16c0 51.6875-72.480469 100.601562-75.558594 102.65625zm0 0"/><path d="m328 304h-16c.207031-2.195312-.582031-4.367188-2.152344-5.917969-1.570312-1.550781-3.75-2.316406-5.945312-2.082031l.097656-16c6.421875-.1875 12.636719 2.28125 17.175781 6.824219 4.542969 4.539062 7.011719 10.753906 6.824219 17.175781zm0 0"/></g><path d="m131.558594 169.34375 8.882812 13.3125c3.078125-2.054688 75.558594-50.96875 75.558594-102.65625h-16c0 43.136719-67.761719 88.886719-68.441406 89.34375zm0 0"/><path d="m192 32-.097656 16c2.195312-.234375 4.375.53125 5.945312 2.082031 1.570313 1.550781 2.359375 3.722657 2.152344 5.917969h16c.1875-6.421875-2.28125-12.636719-6.824219-17.175781-4.539062-4.542969-10.753906-7.011719-17.175781-6.824219zm0 0"/><path d="m355.558594 249.34375 8.882812 13.3125c3.078125-2.054688 75.558594-50.96875 75.558594-102.65625h-16c0 43.136719-67.761719 88.886719-68.441406 89.34375zm0 0"/><path d="m416 112-.097656 16c2.195312-.234375 4.375.53125 5.945312 2.082031 1.570313 1.550781 2.359375 3.722657 2.152344 5.917969h16c.1875-6.421875-2.28125-12.636719-6.824219-17.175781-4.539062-4.542969-10.753906-7.011719-17.175781-6.824219zm0 0"/><path d="m243.558594 417.34375 8.882812 13.3125c3.078125-2.054688 75.558594-50.96875 75.558594-102.65625h-16c0 43.136719-67.761719 88.886719-68.441406 89.34375zm0 0"/><path d="m304 280-.097656 16c2.195312-.234375 4.375.53125 5.945312 2.082031 1.570313 1.550781 2.359375 3.722657 2.152344 5.917969h16c.1875-6.421875-2.28125-12.636719-6.824219-17.175781-4.539062-4.542969-10.753906-7.011719-17.175781-6.824219zm0 0"/><path d="m416 80c-35.328125 0-51.550781 20.34375-62.289062 33.808594l-1.710938 2.144531-1.710938-2.144531c-10.738281-13.464844-26.960937-33.808594-62.289062-33.808594-11.65625-.050781-22.988281 3.835938-32.160156 11.03125.046875-1.007812.160156-2.023438.160156-3.03125 0-42.664062-22.398438-88-64-88-35.328125 0-51.550781 20.34375-62.289062 33.808594l-1.710938 2.144531-1.710938-2.144531c-10.738281-13.464844-26.960937-33.808594-62.289062-33.808594-41.601562 0-64 45.335938-64 88 0 67.753906 118.824219 139.824219 123.878906 142.855469 2.535156 1.523437 5.707032 1.523437 8.242188 0 34.285156-20.949219 65.480468-46.582031 92.679687-76.160157-.507812 4.417969-.773437 8.859376-.800781 13.304688 0 25.71875 16.742188 54.6875 49.734375 86.183594-12.773437 6.4375-23.765625 15.925781-32 27.625l-1.734375 2.144531-1.710938-2.144531c-10.738281-13.464844-26.960937-33.808594-62.289062-33.808594-41.601562 0-64 45.335938-64 88 0 67.753906 118.824219 139.824219 123.878906 142.855469 2.535156 1.523437 5.707032 1.523437 8.242188 0 5.054687-3.03125 123.878906-75.101563 123.878906-142.855469-.015625-10.195312-1.292969-20.351562-3.800781-30.230469 32.878906-21.226562 115.800781-80.464843 115.800781-137.769531 0-42.664062-22.398438-88-64-88zm-288 134.59375c-34.808594-21.738281-112-79.777344-112-126.59375 0-29.894531 14.886719-72 48-72 27.625 0 39.390625 14.761719 49.777344 27.785156 2.675781 3.53125 5.589844 6.882813 8.71875 10.023438 3.085937 2.925781 7.921875 2.925781 11.007812 0 3.128906-3.140625 6.042969-6.492188 8.71875-10.023438 10.386719-13.023437 22.152344-27.785156 49.777344-27.785156 33.113281 0 48 42.105469 48 72 0 52.375-91.433594 113.496094-112 126.59375zm112 248c-34.808594-21.738281-112-79.777344-112-126.59375 0-29.894531 14.886719-72 48-72 27.625 0 39.390625 14.761719 49.777344 27.785156 2.675781 3.53125 5.589844 6.882813 8.71875 10.023438 3.085937 2.925781 7.921875 2.925781 11.007812 0 3.128906-3.140625 6.042969-6.492188 8.71875-10.023438 10.386719-13.023437 22.152344-27.785156 49.777344-27.785156 33.113281 0 48 42.105469 48 72 0 52.375-91.433594 113.496094-112 126.59375zm118.960938-172.554688c-10.160157-24.007812-28.753907-42.039062-54.960938-42.039062-4.152344-.011719-8.300781.292969-12.40625.902344-33.722656-30.460938-51.59375-58.421875-51.59375-80.902344 0-29.894531 14.886719-72 48-72 27.625 0 39.390625 14.761719 49.777344 27.785156 2.675781 3.53125 5.589844 6.882813 8.71875 10.023438 3.085937 2.925781 7.921875 2.925781 11.007812 0 3.128906-3.140625 6.042969-6.492188 8.71875-10.023438 10.386719-13.023437 22.152344-27.785156 49.777344-27.785156 33.113281 0 48 42.105469 48 72 0 47.863281-77.679688 103.816406-105.039062 122.039062zm0 0"/></svg>';
        }
    };

    mojs.addShape('heart', Heart);

    animation.heart.main = new mojs.Shape({
        shape: 'heart',
        ...svgProperties
    }).then({
        easing: 'ease.inout',
        scale: {
            8: 7
        },
        isYoyo: true,
        repeat: 999,
        opacity: 1
    });

    for (let i = 0; i < 20; i++) {
        animation.heart.childs[i] = new mojs.ShapeSwirl({
            shape: 'heart',
            ...svgProperties,
            ...svgPropertiesMini
        });
    }

    /*Bear */
    class Bear extends mojs.CustomShape {
        getShape() {
            return ' <svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 520 520" style=enable-background:new 0 0 512 512;" xml:space="preserve"> <g> <path style="fill:#E9C1A4;" d="M258.374,277.098c21.887,0,42.531-5.101,60.701-14.129c18.866-9.374,35.069-22.982,47.231-39.508 c15.118-20.542,23.995-45.591,23.995-72.626c0-14.126-2.425-27.712-6.898-40.395c23.113-5.571,40.225-25.595,40.225-49.447 c0-28.161-23.855-50.991-53.278-50.991c-21.636,0-40.257,12.342-48.602,30.07c-18.809-9.879-40.407-15.502-63.375-15.502 c-22.969,0-44.567,5.622-63.375,15.502c-8.346-17.727-26.968-30.069-48.603-30.069c-29.425,0-53.279,22.83-53.279,50.991 c0,23.852,17.11,43.875,40.226,49.447c-4.471,12.684-6.898,26.268-6.898,40.395c0,27.034,8.878,52.084,23.995,72.626 c12.162,16.526,28.364,30.134,47.231,39.508C215.843,271.997,236.487,277.098,258.374,277.098L258.374,277.098z M233.665,159.048 c0-10.821,11.063-14.217,24.708-14.217c13.646,0,24.708,3.397,24.708,14.217c0,10.821-11.063,24.969-24.708,24.969 C244.728,184.017,233.665,169.868,233.665,159.048z"/> <path style="fill:#C76F63;" d="M258.374,184.017c13.646,0,24.708-14.148,24.708-24.969s-11.063-14.217-24.708-14.217 c-13.646,0-24.708,3.397-24.708,14.217C233.665,169.868,244.728,184.017,258.374,184.017z"/> <path style="fill:#55D08F;" d="M319.075,262.969c-18.17,9.028-38.814,14.129-60.701,14.129s-42.53-5.101-60.701-14.129 c-12.465,14.511-19.318,33.009-19.318,52.138c0,44.194,35.826,80.019,80.019,80.019s80.019-35.826,80.019-80.019 C338.393,295.977,331.54,277.48,319.075,262.969z"/> <path style="fill:#E9C1A4;" d="M319.075,262.969c12.465,14.511,19.318,33.009,19.318,52.138c0,44.194-35.826,80.019-80.019,80.019 s-80.019-35.826-80.019-80.019c0-19.13,6.853-37.627,19.318-52.138c-18.866-9.374-35.069-22.982-47.231-39.508 c-8.496-8.057-20.186-13.035-33.09-13.035c-25.968,0-47.022,20.15-47.022,45.003c0,24.855,21.054,45.004,47.022,45.004 c1.166,0,2.322-0.042,3.466-0.122c-1.753,9.703-2.682,19.734-2.682,30.001c0,9.67,0.818,19.131,2.38,28.305 c30.059,8.463,50.684,45.299,57.602,70.009c2.407,8.598,2.671,17.261,1.109,25.473v3.106l0.012-0.047 c22.525,16.898,49.775,26.789,79.135,26.789c27.959,0,54.004-8.969,75.876-24.418c-3.041-9.915-3.364-20.731-0.365-31.442 c7.297-26.062,29.841-65.615,62.62-71.136c1.383-8.652,2.105-17.553,2.105-26.639c0-10.267-0.926-20.298-2.682-30.001 c1.145,0.081,2.302,0.122,3.468,0.122c25.969,0,47.021-20.149,47.021-45.004c0-24.852-21.052-45.003-47.021-45.003 c-12.904,0-24.595,4.978-33.091,13.035C354.144,239.986,337.941,253.594,319.075,262.969z"/> <g> <path style="fill:#C76F63;" d="M396.505,356.95c-32.779,5.521-55.323,45.074-62.62,71.136 c-2.999,10.713-2.676,21.527,0.365,31.442c5.782,18.862,21.4,34.471,42.691,39.931c32.483,8.331,65.871-10.118,74.575-41.208 c8.704-31.088,8.647-89.18-34.941-100.359C409.529,356.086,402.828,355.886,396.505,356.95z"/> <path style="fill:#C76F63;" d="M116.134,357.488c32.78,5.521,55.325,45.074,62.621,71.136c2.999,10.712,2.676,21.526-0.364,31.443 c-5.784,18.862-21.401,34.471-42.692,39.931c-32.483,8.33-65.871-10.118-74.575-41.207c-8.703-31.088-8.647-89.181,34.94-100.359 C103.111,356.624,109.814,356.423,116.134,357.488z"/> </g> </g> <path d="M454.773,375.483c-8.143-14.111-20.159-23.29-35.714-27.279c-3.716-0.953-7.461-1.551-11.177-1.788 c0.48-5.345,0.73-10.73,0.73-16.106c0-6.824-0.391-13.656-1.166-20.423c27.647-3.783,48.974-26.763,48.974-54.46 c0-30.329-25.581-55.005-57.024-55.005c-3.084,0-6.127,0.248-9.117,0.709c6.464-15.569,10.023-32.542,10.023-50.298 c0-11.544-1.495-22.936-4.454-33.993c22.685-9.582,37.781-31.292,37.781-55.848C433.63,27.362,405.243,0,370.351,0 c-21.271,0-40.957,10.358-52.583,27.05c-18.524-8.188-38.867-12.481-59.393-12.481s-40.869,4.293-59.393,12.481 C187.354,10.358,167.667,0,146.396,0c-34.893,0-63.281,27.362-63.281,60.994c0,24.557,15.098,46.267,37.783,55.849 c-2.959,11.06-4.455,22.453-4.455,33.992c0,17.756,3.56,34.728,10.023,50.298c-2.989-0.461-6.032-0.709-9.116-0.709 c-31.443,0-57.025,24.675-57.025,55.005c0,27.695,21.33,50.674,48.974,54.46c-0.775,6.771-1.167,13.605-1.167,20.423 c0,5.524,0.265,11.055,0.772,16.546c-0.386-0.008-0.771-0.02-1.159-0.02c-4.894,0-9.874,0.641-14.804,1.904 c-15.555,3.989-27.57,13.166-35.714,27.278c-14.095,24.426-13.358,60.525-6.376,85.467C59.18,491.229,87.31,512,119.262,512 c1.339,0,2.68-0.044,4.018-0.118c0.058-0.001,0.115-0.001,0.173-0.004c0.088-0.004,0.176-0.012,0.264-0.017 c0.104-0.006,0.207-0.013,0.31-0.02c26.193-1.425,49.252-16.886,60.158-39.198c22.542,13.977,47.94,21.305,74.186,21.305 c25.056,0,49.464-6.747,71.286-19.581c0.352,0.658,0.698,1.319,1.073,1.969c9.434,16.347,24.962,28,43.722,32.811 c5.986,1.535,12.138,2.315,18.283,2.315c31.952,0,60.082-20.772,68.408-50.513C468.131,436.008,468.867,399.908,454.773,375.483z M103.121,60.994c0-22.601,19.413-40.989,43.275-40.989c17.07,0,32.595,9.549,39.551,24.328c1.162,2.469,3.283,4.355,5.869,5.223 c2.587,0.867,5.415,0.64,7.832-0.628c17.879-9.391,38.186-14.354,58.724-14.354c20.539,0,40.845,4.963,58.724,14.354 c2.416,1.269,5.246,1.496,7.832,0.628c2.587-0.868,4.707-2.755,5.869-5.223c6.957-14.779,22.481-24.328,39.552-24.328 c23.862,0,43.275,18.387,43.275,40.989c0,15.991-9.727,30.21-24.466,36.928c-2.376-5.411-5.11-10.68-8.184-15.741 c-2.869-4.721-9.019-6.222-13.741-3.356c-4.721,2.868-6.224,9.02-3.356,13.741c4.079,6.715,7.464,13.851,10.06,21.212 c0.063,0.18,0.137,0.352,0.209,0.526c4.075,11.745,6.15,24.03,6.15,36.531c0,60.895-49.354,110.999-111.923,115.868v-74.374 c14.48-4.959,24.708-20.001,24.708-33.281c0-7.282-3.382-24.22-34.71-24.22s-34.71,16.938-34.71,24.22 c0,13.28,10.227,28.322,24.708,33.281v74.374c-62.568-4.868-111.923-54.973-111.923-115.868c0-12.684,2.129-25.156,6.329-37.07 c0.941-2.67,0.707-5.612-0.645-8.1c-1.351-2.488-3.693-4.285-6.445-4.949C116.512,96.094,103.121,79.759,103.121,60.994z M328.391,315.107c0,35.21-26.13,64.421-60.014,69.291V354.08c0-5.524-4.478-10.002-10.002-10.002 c-5.524,0-10.002,4.478-10.002,10.002v30.317c-33.885-4.87-60.014-34.08-60.014-69.29c0-14.252,4.37-28.112,12.399-39.752 c17.617,7.544,37.115,11.746,57.617,11.746s40-4.202,57.618-11.746C324.02,286.995,328.391,300.855,328.391,315.107z M258.374,174.014c-7.833,0-14.706-9.328-14.706-14.967c0-0.975,0-1.379,1.653-2.194c1.533-0.755,5.268-2.021,13.052-2.021 c7.784,0,11.519,1.267,13.052,2.021c1.653,0.814,1.653,1.218,1.653,2.194C273.08,164.686,266.206,174.014,258.374,174.014z M70.118,456.093c-5.664-20.231-6.691-50.788,4.438-70.075c5.428-9.405,13.067-15.261,23.356-17.899 c3.307-0.848,6.616-1.278,9.834-1.278c3.383,0,6.666,0.469,9.839,1.335c0.15,0.046,0.299,0.092,0.452,0.131 c25.767,7.364,44.264,40.925,50.447,63.013c3.366,12.021,1.752,24.649-4.542,35.556c-6.722,11.647-17.861,19.969-31.365,23.432 c-3.269,0.838-6.602,1.366-9.946,1.579c-0.009,0-0.018,0.001-0.026,0.002c-1.113,0.07-2.227,0.105-3.34,0.105 C96.246,491.995,76.038,477.232,70.118,456.093z M258.374,473.944c-24.465,0-48.109-7.464-68.722-21.628 c1.15-8.725,0.54-17.665-1.902-26.388c-7.281-26.007-27.781-62.385-58.238-74.765c-0.908-6.882-1.372-13.87-1.372-20.852 c0-9.466,0.848-18.962,2.522-28.223c0.549-3.039-0.335-6.159-2.397-8.458c-2.062-2.299-5.071-3.518-8.148-3.299 c-0.917,0.065-1.846,0.097-2.763,0.097c-20.413,0-37.02-15.702-37.02-35.001c0-19.299,16.607-35,37.02-35 c9.765,0,18.946,3.56,25.908,10.02c10.676,14.189,24.123,26.333,39.574,35.698c-9.401,14.508-14.482,31.512-14.482,48.962 c0,49.638,40.384,90.021,90.021,90.021s90.021-40.384,90.021-90.021c0-17.45-5.081-34.453-14.482-48.962 c15.452-9.364,28.899-21.508,39.574-35.698c6.963-6.462,16.144-10.02,25.909-10.02c20.412,0,37.019,15.701,37.019,35 c0,19.3-16.607,35.001-37.019,35.001c-0.916,0-1.847-0.033-2.766-0.097c-3.078-0.219-6.087,1-8.149,3.299 c-2.06,2.299-2.946,5.42-2.397,8.459c1.673,9.25,2.522,18.744,2.522,28.221c0,6.194-0.364,12.398-1.078,18.517 c-33.235,10.201-55.6,49.146-63.277,76.561c-2.751,9.826-3.179,19.927-1.379,29.687C303.28,467.427,281.122,473.944,258.374,473.944 z M441.883,455.556c-5.917,21.139-26.126,35.903-49.144,35.903c-4.47,0-8.949-0.567-13.314-1.687 c-13.505-3.463-24.645-11.785-31.365-23.432c-6.294-10.908-7.908-23.536-4.543-35.555c6.512-23.257,26.673-59.232,54.598-63.955 c0.109-0.018,0.218-0.037,0.326-0.058c1.903-0.305,3.842-0.465,5.815-0.465c3.219,0,6.528,0.43,9.834,1.278 c10.288,2.639,17.928,8.493,23.357,17.899C448.575,404.767,447.548,435.325,441.883,455.556z"/> <path d="M321.264,145.39c9.232,0,16.761-7.207,16.761-16.043c0-8.835-7.529-16.042-16.761-16.042 c-9.231,0-16.762,7.207-16.762,16.042C304.502,138.183,312.032,145.39,321.264,145.39z"/> <path d="M195.485,145.39c9.231,0,16.761-7.207,16.761-16.043c0-8.835-7.53-16.042-16.761-16.042 c-9.232,0-16.762,7.207-16.762,16.042C178.723,138.183,186.252,145.39,195.485,145.39z"/> <path d="M346.749,70.743c1.947,1.948,4.494,2.92,7.043,2.92c2.557,0,5.115-0.978,7.072-2.929c3.908-3.897,3.902-10.241,0.011-14.155 l-0.233-0.231c-3.967-3.844-10.314-3.761-14.159,0.206c-3.845,3.966-3.762,10.283,0.205,14.128 C346.694,70.688,346.741,70.736,346.749,70.743z"/> <path d="M248.369,325.107v0.236c0,5.524,4.478,10.002,10.002,10.002c5.524,0,10.002-4.478,10.002-10.002v-0.236 c0-5.524-4.478-10.002-10.002-10.002C252.847,315.105,248.369,319.583,248.369,325.107z"/> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> </svg> ';
        }
    };

    mojs.addShape('bear', Bear);

    animation.bear.main = new mojs.Shape({
        shape: 'bear',
        ...svgProperties
    }).then({
        easing: 'ease.inout',
        scale: {
            8: 7
        },
        isYoyo: true,
        repeat: 999,
        opacity: 1
    });

    for (let i = 0; i < 20; i++) {
        animation.bear.childs[i] = new mojs.ShapeSwirl({
            shape: 'bear',
            ...svgProperties,
            ...svgPropertiesMini
        });
    }

    /*Sun */
    class Sun extends mojs.CustomShape {
        getShape() {
            return '<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 520 520" style=enable-background:new 0 0 512 512;" xml:space="preserve"><path d="m470.867188 256.003906c0-21.105468 38.238281-46.949218 33.035156-66.414062-5.382813-20.140625-51.574219-23.386719-61.777344-41.019532-10.347656-17.886718 9.828125-59.484374-4.6875-74-14.519531-14.515624-56.117188 5.65625-74.003906-4.691406-17.632813-10.203125-20.878906-56.394531-41.015625-61.777344-19.464844-5.203124-45.308594 33.039063-66.414063 33.039063-21.105468 0-46.949218-38.242187-66.414062-33.039063-20.140625 5.382813-23.386719 51.578126-41.019532 61.777344-17.886718 10.351563-59.484374-9.824218-74 4.691406-14.515624 14.515626 5.65625 56.113282-4.691406 74.003907-10.203125 17.632812-56.394531 20.875-61.777344 41.015625-5.203124 19.464844 33.035157 45.308594 33.035157 66.414062 0 21.105469-38.238281 46.949219-33.035157 66.414063 5.382813 20.140625 51.574219 23.382812 61.777344 41.019531 10.351563 17.886719-9.824218 59.484375 4.691406 74 14.515626 14.515625 56.113282-5.660156 74 4.691406 17.636719 10.203125 20.878907 56.394532 41.019532 61.777344 19.464844 5.203125 45.308594-33.039062 66.414062-33.039062 21.105469 0 46.949219 38.242187 66.414063 33.039062 20.136719-5.386719 23.382812-51.578125 41.015625-61.777344 17.890625-10.351562 59.488281 9.824219 74.003906-4.691406s-5.660156-56.117188 4.691406-74.003906c10.199219-17.632813 56.394532-20.875 61.773438-41.015625 5.203125-19.464844-33.035156-45.308594-33.035156-66.414063zm0 0" fill="#ffee8c"/><path d="m421.878906 256.003906c0 83.78125-62.117187 153.054688-142.816406 164.28125-7.535156 1.050782-15.230469 1.589844-23.054688 1.589844-91.609374 0-165.882812-74.261719-165.882812-165.871094s74.273438-165.875 165.882812-165.875c7.824219 0 15.519532.539063 23.054688 1.59375 80.699219 11.222656 142.816406 80.496094 142.816406 164.28125zm0 0" fill="#f28f44"/><path d="m421.878906 256.003906c0 83.78125-62.117187 153.054688-142.816406 164.28125-80.703125-11.226562-142.820312-80.5-142.820312-164.28125 0-83.785156 62.117187-153.058594 142.820312-164.28125 80.699219 11.222656 142.816406 80.496094 142.816406 164.28125zm0 0" fill="#ffd073"/><path d="m256.003906 429.480469c-95.65625 0-173.480468-77.820313-173.480468-173.476563s77.824218-173.476562 173.480468-173.476562c48.648438 0 95.363282 20.621094 128.175782 56.574218 2.832031 3.101563 2.609374 7.910157-.492188 10.742188s-7.910156 2.609375-10.742188-.492188c-29.9375-32.804687-72.558593-51.621093-116.941406-51.621093-87.273437 0-158.269531 71-158.269531 158.273437 0 87.269532 70.996094 158.269532 158.269531 158.269532 87.269532 0 158.269532-71 158.269532-158.269532 0-29.417968-8.125-58.128906-23.5-83.027344-2.207032-3.574218-1.097657-8.261718 2.476562-10.464843 3.574219-2.207031 8.257812-1.097657 10.464844 2.472656 16.855468 27.300781 25.765625 58.777344 25.765625 91.019531 0 95.65625-77.820313 173.476563-173.476563 173.476563zm0 0"/><path d="m318.605469 512.003906c-11.945313 0-23.792969-9.179687-35.300781-18.097656-9.335938-7.234375-19.917969-15.433594-27.300782-15.433594-7.382812 0-17.964844 8.199219-27.300781 15.433594-13.363281 10.351562-27.183594 21.058594-41.078125 17.34375-14.441406-3.859375-21.1875-20.433594-27.710938-36.457031-4.320312-10.617188-9.21875-22.652344-15.152343-26.085938-6.121094-3.539062-19.164063-1.765625-30.667969-.203125-4.058594.554688-8.257812 1.125-12.320312 1.511719-4.179688.398437-7.890626-2.671875-8.289063-6.851563-.398437-4.179687 2.667969-7.890624 6.847656-8.289062 3.761719-.355469 7.800781-.90625 11.710938-1.4375 14.605469-1.984375 29.707031-4.039062 40.335937 2.109375 10.441406 6.039063 16.125 20.007813 21.621094 33.511719 4.882812 12 10.417969 25.59375 17.550781 27.5 6.617188 1.765625 17.890625-6.964844 27.835938-14.671875 11.8125-9.15625 24.03125-18.621094 36.617187-18.621094 12.585938 0 24.800782 9.46875 36.613282 18.621094 9.949218 7.707031 21.222656 16.441406 27.835937 14.671875 7.136719-1.90625 12.667969-15.503906 17.550781-27.5 5.5-13.503906 11.183594-27.472656 21.621094-33.511719 10.628906-6.148437 25.730469-4.09375 40.335938-2.109375 12.675781 1.722656 27.042968 3.675781 32.097656-1.375 5.054687-5.054688 3.101562-19.421875 1.378906-32.097656-1.988281-14.605469-4.042969-29.707032 2.109375-40.335938 6.039063-10.441406 20.003906-16.125 33.511719-21.621094 11.996094-4.882812 25.59375-10.417968 27.5-17.550781 1.765625-6.617187-6.96875-17.890625-14.675782-27.835937-9.152343-11.8125-18.621093-24.03125-18.621093-36.617188 0-12.582031 9.46875-24.800781 18.621093-36.613281 7.707032-9.949219 16.441407-21.222656 14.675782-27.835937-1.90625-7.132813-15.503906-12.667969-27.5-17.550782-13.507813-5.496094-27.472656-11.183594-33.515625-21.621094-6.148438-10.628906-4.09375-25.730468-2.109375-40.335937 1.726562-12.675781 3.679687-27.042969-1.375-32.097656-5.054688-5.054688-19.421875-3.101563-32.097656-1.378907-14.605469 1.988282-29.707032 4.042969-40.335938-2.105468-10.441406-6.042969-16.125-20.007813-21.621094-33.515625-4.882812-11.996094-10.417968-25.59375-17.550781-27.5-6.613281-1.761719-17.890625 6.96875-27.835937 14.675781-11.8125 9.152344-24.03125 18.617188-36.617188 18.617188s-24.800781-9.464844-36.613281-18.617188c-9.949219-7.707031-21.222657-16.441406-27.835938-14.675781-7.136719 1.90625-12.667969 15.503906-17.550781 27.5-5.5 13.507812-11.183594 27.472656-21.625 33.511719-10.625 6.148437-25.726562 4.097656-40.335938 2.109374-12.675781-1.722656-27.042968-3.675781-32.09375 1.378907-5.054687 5.054687-3.101562 19.421875-1.378906 32.097656 1.988282 14.605469 4.039063 29.707031-2.109375 40.335937-6.039062 10.4375-20.007812 16.121094-33.511719 21.621094-11.996093 4.882813-25.59375 10.414063-27.5 17.550782-1.769531 6.613281 6.96875 17.886718 14.675782 27.832031 9.152344 11.816406 18.617187 24.03125 18.617187 36.617187 0 12.585938-9.464843 24.804688-18.617187 36.617188-7.707032 9.945312-16.445313 21.21875-14.675782 27.835937 1.90625 7.136719 15.503907 12.667969 27.5 17.550781 13.503907 5.496094 27.472657 11.183594 33.511719 21.621094 6.148438 10.628906 4.09375 25.730469 2.109375 40.335938-1.722656 12.675781-3.675781 27.042968 1.378906 32.097656 2.96875 2.96875 2.96875 7.785156 0 10.753906-2.972656 2.96875-7.785156 2.96875-10.753906 0-10.386718-10.386718-8-27.933594-5.691406-44.902344 1.5625-11.503906 3.335938-24.546874-.207031-30.671874-3.429688-5.929688-15.464844-10.828126-26.082031-15.148438-16.027344-6.523438-32.597657-13.269531-36.457032-27.710938-3.714844-13.898437 6.992188-27.714843 17.34375-41.078124 7.234375-9.335938 15.433594-19.917969 15.433594-27.300782 0-7.382812-8.199219-17.964844-15.433594-27.300781-10.347656-13.363281-21.054687-27.179687-17.339844-41.078125 3.859376-14.441406 20.433594-21.1875 36.457032-27.707031 10.617187-4.324219 22.648437-9.21875 26.085937-15.152344 3.539063-6.121094 1.765625-19.164063.203125-30.671875-2.308594-16.96875-4.695312-34.511719 5.691406-44.898438 10.386719-10.386718 27.929688-8 44.898438-5.691406 11.507812 1.5625 24.550781 3.335938 30.671875-.207031 5.933594-3.429687 10.832031-15.464844 15.152344-26.082031 6.523437-16.027344 13.265625-32.597656 27.710937-36.457032 13.898438-3.714843 27.714844 6.988282 41.074219 17.34375 9.335937 7.234376 19.917969 15.433594 27.300781 15.433594 7.386719 0 17.96875-8.199218 27.304688-15.433594 13.359375-10.351562 27.171875-21.0625 41.074218-17.34375 14.441407 3.859376 21.1875 20.433594 27.710938 36.457032 4.320312 10.617187 9.21875 22.652344 15.152344 26.085937 6.121094 3.539063 19.164062 1.765625 30.671875.203125 16.96875-2.308594 34.511719-4.695312 44.898437 5.691406 10.386719 10.386719 8 27.929688 5.691406 44.898438-1.5625 11.507812-3.335937 24.550781.203126 30.671875 3.433593 5.933594 15.46875 10.832031 26.085937 15.152344 16.023437 6.523437 32.597656 13.265625 36.457031 27.710937 3.714844 13.898438-6.992187 27.714844-17.34375 41.074219-7.234375 9.335937-15.433594 19.917969-15.433594 27.300781 0 7.382813 8.199219 17.964844 15.433594 27.300782 10.351563 13.363281 21.058594 27.179687 17.34375 41.078124-3.859375 14.441407-20.433594 21.1875-36.457031 27.710938-10.617187 4.320312-22.652344 9.214844-26.085937 15.148438-3.539063 6.125-1.765626 19.167968-.203126 30.671874 2.308594 16.96875 4.695313 34.515626-5.691406 44.898438-10.386718 10.386719-27.933594 8-44.898437 5.695312-11.507813-1.566406-24.550781-3.339843-30.671875.203126-5.933594 3.433593-10.832032 15.464843-15.152344 26.082031-6.523438 16.023437-13.265625 32.597656-27.710938 36.457031-1.929687.515625-3.855468.753906-5.777343.753906zm0 0"/><path d="m158.855469 230.277344c-1.945313 0-3.890625-.742188-5.375-2.226563-2.96875-2.96875-2.96875-7.785156 0-10.753906 17.007812-17.007813 44.683593-17.007813 61.695312 0 2.96875 2.96875 2.96875 7.785156 0 10.753906-2.972656 2.96875-7.785156 2.96875-10.753906 0-11.082031-11.082031-29.105469-11.078125-40.1875 0-1.484375 1.484375-3.433594 2.226563-5.378906 2.226563zm0 0"/><path d="m353.148438 230.277344c-1.945313 0-3.890626-.742188-5.375-2.226563-11.078126-11.078125-29.109376-11.078125-40.1875 0-2.96875 2.96875-7.785157 2.96875-10.753907 0s-2.96875-7.78125 0-10.753906c17.007813-17.007813 44.6875-17.007813 61.695313 0 2.96875 2.972656 2.96875 7.785156 0 10.753906-1.484375 1.484375-3.429688 2.226563-5.378906 2.226563zm0 0"/><path d="m256.003906 308.960938c-16.511718 0-32.035156-6.429688-43.707031-18.105469-2.96875-2.96875-2.96875-7.78125 0-10.75s7.785156-2.96875 10.75 0c8.804687 8.800781 20.507813 13.648437 32.957031 13.648437 12.449219 0 24.152344-4.847656 32.953125-13.648437 2.96875-2.96875 7.785157-2.96875 10.753907 0s2.96875 7.78125 0 10.75c-11.675782 11.675781-27.195313 18.105469-43.707032 18.105469zm0 0"/>';
        }
    };

    mojs.addShape('sun', Sun);

    animation.sun.main = new mojs.Shape({
        shape: 'sun',
        ...svgProperties
    }).then({
        easing: 'ease.inout',
        scale: {
            8: 7
        },
        isYoyo: true,
        repeat: 999,
        opacity: 1
    });

    for (let i = 0; i < 20; i++) {
        animation.sun.childs[i] = new mojs.ShapeSwirl({
            shape: 'sun',
            ...svgProperties,
            ...svgPropertiesMini
        });
    }

    /*Flower */
    class Flower extends mojs.CustomShape {
        getShape() {
            return '<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 520 520" style="enable-background:new 0 0 511.999 511.999;" xml:space="preserve"> <path style="fill:#FF728B;" d="M196.786,357.748C83.906,553.262-87.718,256,138.042,256c-225.761,0-54.136-297.262,58.744-101.747 c-112.881-195.515,230.368-195.515,117.487,0C427.154-41.262,598.779,256,373.018,256c225.761,0,54.136,297.262-58.744,101.748 C427.154,553.262,83.906,553.262,196.786,357.748z"/> <path style="fill:#FF3F62;" d="M373.018,255.858l-114.488-1.54l0.057-0.095l-0.092,0.002l55.78-99.971 c112.881-195.515-230.368-195.515-117.487,0l55.788,99.985l-0.107-0.001l0.057,0.095l-114.48,2.059 c-225.759,0.749-53.15,297.439,59.081,101.552l58.361-98.486l0.045,0.08l0.053-0.094l58.815,98.234 C427.515,553.054,598.779,255.585,373.018,255.858z"/> <circle style="fill:#FFEB99;" cx="255.711" cy="255.997" r="59.308"/> <path style="fill:#FFDA44;" d="M226.465,256c0-27.56,18.801-50.725,44.275-57.381c-4.801-1.255-9.838-1.927-15.033-1.927 c-32.755,0-59.308,26.553-59.308,59.308s26.553,59.308,59.308,59.308c5.195,0,10.231-0.672,15.033-1.927 C245.265,306.725,226.465,283.561,226.465,256z"/> <path d="M255.531,410.099c-4.199,0-7.604,3.404-7.604,7.604v31.935c0,4.199,3.404,7.604,7.604,7.604s7.604-3.404,7.604-7.604 v-31.935C263.134,413.504,259.73,410.099,255.531,410.099z"/> <path d="M154.387,181.789c1.419,1.179,3.141,1.753,4.852,1.753c2.184,0,4.351-0.936,5.855-2.747 c2.682-3.232,2.237-8.025-0.995-10.707l-19.579-16.249c-3.232-2.683-8.025-2.237-10.707,0.995 c-2.683,3.232-2.236,8.025,0.995,10.707L154.387,181.789z"/> <path d="M122.922,319.255l-28.106,15.219c-3.693,1.999-5.065,6.614-3.066,10.307c1.377,2.542,3.992,3.984,6.693,3.984 c1.223,0,2.463-0.296,3.614-0.919l28.106-15.219c3.692-1.999,5.065-6.614,3.066-10.307 C131.229,318.629,126.617,317.256,122.922,319.255z"/> <path d="M392.432,367.721l-20.262-18.066c-3.134-2.794-7.94-2.519-10.735,0.615c-2.794,3.135-2.519,7.941,0.615,10.735 l20.262,18.066c1.45,1.293,7.088,3.485,10.735-0.615C395.839,375.32,395.567,370.516,392.432,367.721z"/> <path d="M255.707,100.887c4.199,0,7.604-3.404,7.604-7.604V61.171c0-4.199-3.404-7.604-7.604-7.604 c-4.199,0-7.604,3.404-7.604,7.604v32.112C248.103,97.483,251.508,100.887,255.707,100.887z"/> <path d="M489.585,312.969c-5.064-19.121-17.266-35.049-35.287-46.062c-7.237-4.422-15.365-8.059-24.357-10.904 c10.397-3.289,19.64-7.639,27.681-13.039c18.179-12.206,29.719-29.619,33.376-50.357c7.658-43.433-20.883-92.869-62.327-107.953 c-19.788-7.202-40.638-5.914-60.298,3.726c-8.694,4.263-17.081,10.09-25.124,17.446c2.348-10.645,3.202-20.821,2.547-30.481 c-1.482-21.846-10.792-40.547-26.923-54.083c-33.786-28.349-90.87-28.349-124.654,0c-16.132,13.535-25.441,32.237-26.923,54.083 c-0.658,9.701,0.205,19.922,2.576,30.615c-13.504-12.368-27.924-20.471-42.849-23.943c-20.863-4.853-41.868-0.737-60.745,11.905 c-3.49,2.337-4.424,7.059-2.087,10.549c2.337,3.491,7.06,4.424,10.549,2.087c10.664-7.141,27.795-14.624,48.839-9.73 c24.401,5.677,47.791,26.849,67.639,61.226c2.1,3.638,6.751,4.884,10.386,2.783c3.637-2.1,4.883-6.75,2.783-10.386 c-15.998-27.71-23.372-52.633-21.919-74.077c1.195-17.62,8.639-32.65,21.525-43.463c27.995-23.491,77.109-23.491,105.104,0 c12.887,10.813,20.33,25.842,21.525,43.463c1.455,21.444-5.92,46.368-21.919,74.077c-0.693,1.2-1.022,2.511-1.02,3.804 c0.003,2.625,1.367,5.175,3.803,6.583c3.636,2.1,8.286,0.854,10.386-2.783c15.998-27.71,33.896-46.558,53.195-56.02 c15.857-7.775,32.593-8.844,48.402-3.09c34.341,12.499,58.898,55.033,52.552,91.023c-2.921,16.567-12.215,30.528-26.877,40.373 c-17.844,11.981-43.115,18.057-75.112,18.057c-4.199,0-7.604,3.404-7.604,7.604c0,4.199,3.404,7.604,7.604,7.604 c55.94,0,91.756,18.915,100.853,53.258c8.628,32.576-9.79,73.569-41.057,91.381c-3.649,2.078-4.921,6.722-2.843,10.37 c1.402,2.462,3.97,3.841,6.613,3.841c1.275,0,2.569-0.321,3.757-0.999c17.714-10.09,32.504-26.676,41.644-46.7 C492.363,354.237,494.702,332.294,489.585,312.969z"/> <path d="M43.753,127.462c1.373,1.037,6.697,3.333,10.65-1.481c1.028-1.252,2.001-2.576,3.043-3.812 c2.706-3.211,2.297-8.008-0.913-10.714c-3.211-2.707-8.008-2.296-10.714,0.913c-1.216,1.443-2.409,2.937-3.547,4.444 C39.739,120.162,40.403,124.931,43.753,127.462z"/> <path d="M104.796,201.949c-1.416,3.953,0.641,8.306,4.595,9.721l82.117,29.412c-0.547,2.394-0.97,4.832-1.253,7.315h-25.919 c-4.199,0-7.604,3.404-7.604,7.604c0,4.199,3.404,7.604,7.604,7.604h25.919c0.671,5.901,2.116,11.568,4.225,16.904l-38.856,21.041 c-3.692,1.999-5.064,6.613-3.066,10.307c3.033,5.607,9.157,3.689,10.307,3.066l38.773-20.995 c4.349,6.297,9.749,11.809,15.943,16.294l-11.529,19.456c-2.141,3.612-1.083,8.524,2.665,10.417 c5.126,2.589,8.998-0.269,10.417-2.665l11.693-19.732c5.372,2.263,11.104,3.828,17.079,4.618l0.022,63.457 c0.001,4.198,3.405,7.601,7.604,7.601h0.003c4.199-0.001,7.603-3.406,7.601-7.606l-0.022-63.165 c14.334-1.365,27.356-7.276,37.622-16.265l41.776,37.248c1.45,1.293,6.507,3.364,10.735-0.615c3.058-2.878,2.519-7.941-0.615-10.735 l-41.655-37.141c2.147-2.971,4.058-6.121,5.701-9.429l68.158,24.141c0.839,0.297,7.27,1.957,9.706-4.629 c1.457-3.939-0.67-8.303-4.629-9.706l-68.077-24.112c0.501-2.125,0.9-4.287,1.192-6.484h18.38c4.199,0,7.604-3.404,7.604-7.604 s-3.404-7.604-7.604-7.604h-18.083c-0.78-8.262-3.069-16.087-6.587-23.205l74.694-47.161c3.55-2.242,4.612-6.938,2.37-10.489 c-2.242-3.551-6.939-4.612-10.489-2.37L308.5,213.677c-3.377-4.124-7.238-7.837-11.492-11.057l11.096-19.886 c2.047-3.667,0.732-8.299-2.935-10.345s-8.299-0.732-10.345,2.935l-10.915,19.561c-6.404-2.861-13.33-4.754-20.6-5.468v-60.65 c0-4.199-3.404-7.604-7.604-7.604c-4.199,0-7.604,3.404-7.604,7.604v60.895c-14.738,1.905-27.985,8.612-38.114,18.512l-26.16-21.713 c-3.232-2.683-8.026-2.237-10.707,0.995c-2.683,3.232-2.236,8.025,0.995,10.707l26.269,21.803c-1.398,2.178-2.683,4.433-3.825,6.773 l-82.041-29.384C110.569,195.94,106.213,197.995,104.796,201.949z M256.721,204.296c28.51,0,51.704,23.194,51.704,51.704 s-23.194,51.704-51.704,51.704c-28.51,0-51.704-23.194-51.704-51.704S228.211,204.296,256.721,204.296z"/> <path d="M406.053,416.59c-21.483,1.528-53.711-8.114-85.193-62.644c-2.1-3.638-6.751-4.883-10.386-2.783 c-3.637,2.1-4.883,6.75-2.783,10.386c15.998,27.71,23.372,52.633,21.919,74.077c-1.195,17.62-8.639,32.65-21.524,43.463 c-27.995,23.491-77.109,23.491-105.105,0c-12.887-10.813-20.33-25.842-21.525-43.463c-1.455-21.444,5.92-46.368,21.919-74.077 c0.693-1.2,1.022-2.511,1.02-3.804c-0.003-2.625-1.367-5.176-3.803-6.583c-3.637-2.101-8.287-0.854-10.386,2.783 c-15.998,27.71-33.896,46.558-53.194,56.02c-15.857,7.775-32.594,8.844-48.402,3.09c-34.341-12.499-58.898-55.033-52.552-91.023 c2.922-16.567,12.215-30.528,26.877-40.373c17.844-11.981,43.115-18.057,75.112-18.057c4.199,0,7.604-3.404,7.604-7.604 s-3.404-7.604-7.604-7.604c-45.442,0-77.646-12.423-93.129-35.927c-12.169-18.474-13.205-42.897-2.845-67.01 c1.658-3.859-0.126-8.329-3.984-9.988c-3.859-1.66-8.329,0.127-9.988,3.984c-12.416,28.897-10.916,58.558,4.117,81.38 c8.283,12.574,23.187,26.705,49.917,35.163c-10.395,3.289-19.639,7.639-27.679,13.038c-18.179,12.206-29.719,29.619-33.376,50.357 c-7.658,43.433,20.884,92.869,62.327,107.953c19.789,7.202,40.639,5.914,60.298-3.726c8.694-4.263,17.081-10.09,25.125-17.446 c-2.348,10.645-3.202,20.821-2.547,30.481c1.481,21.846,10.791,40.547,26.923,54.083c16.892,14.174,39.61,21.262,62.327,21.262 s45.435-7.088,62.327-21.262c16.131-13.535,25.441-32.237,26.923-54.083c0.655-9.668-0.2-19.85-2.551-30.501 c4.568,4.181,9.246,7.869,14.025,11.056c16.326,10.887,33.439,15.776,50.872,14.55c4.189-0.296,7.344-3.933,7.048-8.122 C413.877,419.449,410.242,416.292,406.053,416.59z"/> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> <g> </g> </svg> ';
        }
    };

    mojs.addShape('flower', Flower);

    animation.flower.main = new mojs.Shape({
        shape: 'flower',
        ...svgProperties
    }).then({
        easing: 'ease.inout',
        scale: {
            8: 7
        },
        isYoyo: true,
        repeat: 999,
        opacity: 1
    });

    for (let i = 0; i < 20; i++) {
        animation.flower.childs[i] = new mojs.ShapeSwirl({
            shape: 'flower',
            ...svgProperties,
            ...svgPropertiesMini
        });
    }

    /*X */
    class X extends mojs.CustomShape {
        getShape() {
            return ' <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 420 420" style="enable-background:new 0 0 511.999 511.999;" xml:space="preserve"> <path d="m361.726562 301.375-286.613281-286.613281c-12.5-12.5-32.765625-12.5-45.246093 0l-15.105469 15.082031c-12.5 12.503906-12.5 32.769531 0 45.25l286.613281 286.613281c12.503906 12.5 32.769531 12.5 45.25 0l15.082031-15.082031c12.523438-12.480469 12.523438-32.746094.019531-45.25zm0 0" fill="#f44336"/><path d="m301.375 14.761719-286.613281 286.613281c-12.5 12.503906-12.5 32.769531 0 45.25l15.082031 15.082031c12.503906 12.5 32.769531 12.5 45.25 0l286.632812-286.59375c12.503907-12.5 12.503907-32.765625 0-45.246093l-15.082031-15.082032c-12.5-12.523437-32.765625-12.523437-45.269531-.023437zm0 0" fill="#f44336"/><path d="m316.457031 376.46875c-9.554687 0-19.132812-3.648438-26.429687-10.921875l-101.78125-101.761719-101.761719 101.761719c-14.632813 14.589844-38.335937 14.589844-52.90625 0l-22.632813-22.636719c-14.570312-14.570312-14.59375-38.3125-.023437-52.882812l101.78125-101.78125-101.757813-101.761719c-14.59375-14.589844-14.59375-38.335937 0-52.90625l22.632813-22.632813c14.570313-14.570312 38.292969-14.59375 52.886719-.023437l101.78125 101.804687 101.757812-101.78125c14.636719-14.59375 38.335938-14.59375 52.90625 0l22.636719 22.632813c14.589844 14.59375 14.589844 38.335937 0 52.90625l-101.761719 101.761719 101.761719 101.757812s.019531 0 .019531.023438c14.570313 14.589844 14.550782 38.335937-.019531 52.882812l-22.636719 22.636719c-7.292968 7.273437-16.871094 10.921875-26.453125 10.921875zm-128.210937-151.316406c4.09375 0 8.191406 1.558594 11.304687 4.691406l113.066407 113.066406c2.09375 2.09375 5.589843 2.09375 7.660156 0l22.632812-22.632812c2.09375-2.089844 2.070313-5.589844-.019531-7.679688l-113.046875-113.046875c-6.25-6.25-6.25-16.382812 0-22.632812l113.066406-113.066407c2.09375-2.089843 2.09375-5.589843 0-7.660156l-22.632812-22.613281c-2.089844-2.089844-5.566406-2.070313-7.679688.023437l-113.046875 113.066407c-5.992187 5.992187-16.617187 5.992187-22.632812 0l-113.046875-113.089844c-2.089844-2.089844-5.589844-2.089844-7.65625 0l-22.636719 22.636719c-2.089844 2.089844-2.089844 5.585937 0 7.65625l113.066406 113.066406c6.25 6.25 6.25 16.386719 0 22.636719l-113.066406 113.066406c-2.070313 2.089844-2.089844 5.589844 0 7.65625l22.636719 22.636719c2.089844 2.089844 5.566406 2.070312 7.679687-.023438l113.042969-113.042968c3.117188-3.136719 7.210938-4.714844 11.308594-4.714844zm0 0"/></svg>';
        }
    };

    mojs.addShape('x', X);

    animation.x.main = new mojs.Shape({
        shape: 'x',
        ...svgProperties
    }).then({
        easing: 'ease.inout',
        scale: {
            8: 7
        },
        isYoyo: true,
        repeat: 999,
        opacity: 1
    });

    for (let i = 0; i < 20; i++) {
        animation.x.childs[i] = new mojs.ShapeSwirl({
            shape: 'x',
            ...svgProperties,
            ...svgPropertiesMini
        });
    }

    /*Square */
    animation['square'].main = new mojs.Shape({
        ...commandsProperties['square']
    });

    animation['square'].stroke1 = new mojs.Shape({
        ...commandsProperties['squareStrokes'].stroke1
    });

    animation['square'].stroke2 = new mojs.Shape({
        ...commandsProperties['squareStrokes'].stroke2
    });

    for (let i = 0; i < 20; i++) {
        animation['square'].childs[i] = new mojs.ShapeSwirl({
            ...commandsProperties['square'],
            ...childsMoProperties,
            stroke: randomColor()
        });
    }

    animation['square'].main.el.style.zIndex = 10;
    animation['square'].stroke1.el.style.zIndex = 10;
    animation['square'].stroke2.el.style.zIndex = 10;

    /*Circle */
    animation['circle'].main = new mojs.Shape({
        ...commandsProperties['circle']
    });

    animation['circle'].stroke1 = new mojs.Shape({
        ...commandsProperties['circleStrokes'].stroke1
    });

    animation['circle'].stroke2 = new mojs.Shape({
        ...commandsProperties['circleStrokes'].stroke2
    });

    for (let i = 0; i < 20; i++) {
        animation['circle'].childs[i] = new mojs.ShapeSwirl({
            ...commandsProperties['circle'],
            ...childsMoProperties,
            stroke: randomColor()
        });
    }

    animation['circle'].main.el.style.zIndex = 10;
    animation['circle'].stroke1.el.style.zIndex = 10;
    animation['circle'].stroke2.el.style.zIndex = 10;

    /*Triangle */
    animation['triangle'].main = new mojs.Shape({
        ...commandsProperties['triangle']
    });

    animation['triangle'].stroke1 = new mojs.Shape({
        ...commandsProperties['triangleStrokes'].stroke1
    });

    animation['triangle'].stroke2 = new mojs.Shape({
        ...commandsProperties['triangleStrokes'].stroke2
    });

    for (let i = 0; i < 20; i++) {
        animation['triangle'].childs[i] = new mojs.ShapeSwirl({
            ...commandsProperties['triangle'],
            ...childsMoProperties,
            stroke: randomColor()
        });
    }

    animation['triangle'].main.el.style.zIndex = 10;
    animation['triangle'].stroke1.el.style.zIndex = 10;
    animation['triangle'].stroke2.el.style.zIndex = 10;
}

function showAnimation(shape) {

    animation[shape].main.tune({
        opacity: {
            0: 1
        }
    }).replay();

    for (let i = 0; i < 20; i++) {
        animation[shape].childs[i].tune({
            opacity: 1
        }).replay();
    }

    if (shape.includes('triangle') || shape.includes('circle') || shape.includes('square')) {

        animation[shape].stroke1.tune({
            opacity: 1
        }).replay();

        animation[shape].stroke2.tune({
            opacity: 1
        }).replay();

        animation[shape].stroke1.el.style.zIndex = 10;
        animation[shape].stroke2.el.style.zIndex = 10;
    }
    animation[shape].main.el.style.zIndex = 10;

}

function stopAllAnimations() {
    Object.keys(animation).forEach((el1) => {
        Object.keys(animation[el1]).forEach((el2, index) => {
            if (index == 1) {
                Object.keys(animation[el1][el2]).forEach((el3, index) => {
                    animation[el1][el2][el3].tune({
                        opacity: 0
                    }).stop();
                });
            } else {
                animation[el1][el2].tune({
                    opacity: 0
                }).stop();
            }
        })
    });
}

function showBurst(x = 0, y = 0, burst = 0) {

    innerBurst[burst].tune({
        ...innerBurstProp,
        stroke: randomColor(),
        fill: randomColor(),
        children: {
            stroke: randomColor(),
            fill: randomColor()
        },
        x: x,
        y: y
    });

    innerBurst[burst].play();
}

function showBurstInterval(interval = 5000) {
    interval = interval < 5000 ? 5000 : interval;

    showBurst(randomInt(-900, 900), randomInt(-500, 500), 0);
    setTimeout(function () {
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 0);
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 1);
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 2);
    }, 1000);
    setTimeout(function () {
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 0);
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 1);
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 2);
    }, 2000);
    setTimeout(function () {
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 0);
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 1);
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 2);
    }, 3000);
    setTimeout(function () {
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 0);
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 1);
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 2);
    }, 4000);
    setTimeout(function () {
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 0);
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 1);
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 2);
    }, 5000);

    burstInterval = setInterval(function () {
        showBurst(randomInt(-900, 900), randomInt(-500, 500), 0);
        setTimeout(function () {
            showBurst(randomInt(-900, 900), randomInt(-500, 500), 0);
            showBurst(randomInt(-900, 900), randomInt(-500, 500), 1);
            showBurst(randomInt(-900, 900), randomInt(-500, 500), 2);
        }, 1000);
        setTimeout(function () {
            showBurst(randomInt(-900, 900), randomInt(-500, 500), 0);
            showBurst(randomInt(-900, 900), randomInt(-500, 500), 1);
            showBurst(randomInt(-900, 900), randomInt(-500, 500), 2);
        }, 2000);
        setTimeout(function () {
            showBurst(randomInt(-900, 900), randomInt(-500, 500), 0);
            showBurst(randomInt(-900, 900), randomInt(-500, 500), 1);
            showBurst(randomInt(-900, 900), randomInt(-500, 500), 2);
        }, 3000);
        setTimeout(function () {
            showBurst(randomInt(-900, 900), randomInt(-500, 500), 0);
            showBurst(randomInt(-900, 900), randomInt(-500, 500), 1);
            showBurst(randomInt(-900, 900), randomInt(-500, 500), 2);
        }, 4000);
        setTimeout(function () {
            showBurst(randomInt(-900, 900), randomInt(-500, 500), 0);
            showBurst(randomInt(-900, 900), randomInt(-500, 500), 1);
            showBurst(randomInt(-900, 900), randomInt(-500, 500), 2);
        }, 5000);
    }, interval);
}

function appendText(text, timeout = 0) {
    $('#text').html(text);
    if (timeout) {
        setTimeout(function () {
            $('#text').html("");
        }, timeout);
    }
}

function countTo(time) {
    for (let i = 1; i <= time; i++) {
        setTimeout(function () {
            $("#text").html(i)
        }, (i - 1) * 1000);
    }
    setTimeout(function () {
        $("#text").html("");
    }, (time + 1) * 1000);
}